#!/bin/bash
# 定义日志
workdir=`pwd`
log_file=${workdir}/sync_images_$(date +"%Y-%m-%d").log

logger()
{
    log=$1
    cur_time='['$(date +"%Y-%m-%d %H:%M:%S")']'
    echo ${cur_time} ${log} | tee -a ${log_file}
}

list="images.txt"
#images="images.tar.gz"

POSITIONAL=()
while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        -i|--images)
        images="$2"
        shift # past argument
        shift # past value
        ;;
        -l|--image-list)
        list="$2"
        shift # past argument
        shift # past value
        ;;
        -h|--help)
        help="true"
        shift
    ;;
    esac
done

usage () {
    echo "USAGE: $0 [--image-list images.txt] [--images images.tar.gz]"
    echo "  [-l|--images-list path] text file with list of images. 1 per line."
    echo "  [-l|--images path] tar.gz generated by docker save."
    echo "  [-h|--help] Usage message"
}

if [[ $help ]]; then
    usage
    exit 0
fi

#set -e -x

#mkdir -p images-$(date +"%Y-%m-%d")
#cd images-$(date +"%Y-%m-%d")
project=harbor
images_path="images-${project}"
mkdir -p ${images_path}

for i in $(cat ${list}); 
do
    image_name=`echo ${i} |awk -F: '{print $1}'`
    image_tag=`echo ${i} |awk -F: '{print $2}'`
    docker images|grep ${image_name} |grep ${image_tag} >/dev/null 2>&1
    if [ $? -ne 0 ];then
       docker pull ${i}
       if [ $? -ne 0 ]; then
           logger "${i} pull failed."
       else
           logger "${i} pull successfully."
       fi
    else
       echo "image $i is already pulled"
       echo $i
       image_pkg_name="`echo ${i} |sed "s#/#-#g; s#:#-#g"`.tgz"
       echo $image_pkg_name
       ls ${images_path} |grep "${image_pkg_name}" >/dev/null 2>&1 
       if [ $? -ne 0 ];then
           docker save ${i} | gzip >${images_path}/${image_pkg_name}
           if [ $? -ne 0 ]; then
               logger "${i} save failed."
           else
               logger "${i} save successfully."
           fi
       else
           echo "${images_path} image $i is already exists"
       fi
    fi

    echo 
    echo --------------------------------------------------------------------
done
